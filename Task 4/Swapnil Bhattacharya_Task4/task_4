stud_list = []

class Student:
    def __init__(self, name, marks):
        self.name = name
        self.marks = marks

    def total(self):
        return sum(self.marks)
    
    def average(self):
        tot = sum(self.marks)
        avg = tot / len(self.marks)
        return avg


def create_students():
    n = int(input("Enter the number of students: "))
    sub = int(input("Enter the number of subjects: "))

    for i in range(n):
        Name = input("\nEnter name of student " + str(i + 1) + ": ")
        mark = [] 
        for index in range(sub):
            mark.append(int(input("Enter mark for subject " + str(index + 1) + ": " )))
        mark_tup = tuple(mark)
        stud = Student(Name, mark_tup)
        stud_list.append(stud)


def analyze_students(stud_list):
    if len(stud_list) == 0:
        print("No student data available.")
        return

    total_marks_all = 0
    total_subjects_all = 0

    for stud in stud_list:
        total_marks_all += stud.total()
        total_subjects_all += len(stud.marks)
    overall_avg = total_marks_all / total_subjects_all
    
    highest = stud_list[0]
    lowest = stud_list[0]

    for s in stud_list:
        if s.total() > highest.total():
            highest = s
        if s.total() < lowest.total():
            lowest = s

    # Manual sort (descending order)
    l = len(stud_list)
    for i in range(l - 1):
        for j in range(i + 1, l):
            if stud_list[j].total() > stud_list[i].total():
                temp = stud_list[i]
                stud_list[i] = stud_list[j]
                stud_list[j] = temp

        
    print("Overall average marks:" + str(overall_avg))
    print("Highest scorer: " + str(highest.name))
    print("Lowest scorer: " + str(lowest.name))
          
    print("Students sorted by total marks:")
    for s in stud_list:
        print(str(s.name) +"--"+ str(s.total()) +" marks")



create_students()
analyze_students(stud_list)
